(()=>{"use strict";const e=window.wp.blocks,t=window.wp.blockEditor,n=window.wp.components,l=window.wp.data,o=window.wp.i18n,a=JSON.parse('{"name":"sht/primary-media"}'),{name:i}=a;(0,e.registerBlockType)(i,{edit:e=>{const a=(0,t.useBlockProps)(),{attributes:i,setAttributes:c}=e,{hideInlineEmbed:r,resolution:s}=i,m=(0,l.useSelect)((e=>e("core/editor").getEditorSettings().imageSizes),[]);return React.createElement(React.Fragment,null,React.createElement(t.InspectorControls,null,React.createElement(n.PanelBody,{title:(0,o._x)("Settings","Block settings","textdomain")},React.createElement(n.PanelRow,null,React.createElement(n.ToggleControl,{label:(0,o._x)("Hide inline embed","Block setting","textdomain"),checked:r,onChange:()=>{c({hideInlineEmbed:!r})}})),React.createElement(n.PanelRow,null,React.createElement(n.SelectControl,{label:(0,o._x)("Image resolution","Block setting","textdomain"),value:s,options:m.map((e=>({label:e.name,value:e.slug}))),onChange:e=>c({resolution:e})})))),React.createElement("div",a,React.createElement("p",null,"This block currently has no preview.")))}})})();